{"mappings":"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","sources":["ts/App.ts","ts/EditProfileModal.ts","ts/Like.ts","ts/Profile.ts"],"sourcesContent":["import EditProfileModal from \"./EditProfileModal\";\nimport Like from \"./Like\";\nimport Profile from \"./Profile\";\n\nclass App {\n    xcsrfToken: string\n    readonly view = document.getElementsByTagName('body')[0].dataset.view\n\n    constructor(xcsrfToken: string) {\n        this.xcsrfToken = xcsrfToken;\n    }\n\n    run() {\n        this.textarea();\n        const likeButtons = Array.from(document.querySelectorAll('[data-button=\"like\"]')) as HTMLElement[];\n        new Like(likeButtons, this.xcsrfToken);\n        this.loadClasses();\n        console.log('App running...');\n    }\n\n    /**\n     * Resize textarea on input dynamically\n     */\n    private textarea() {\n        const tx = document.getElementsByTagName(\"textarea\");\n        for (let i = 0; i < tx.length; i++) {\n            tx[i].setAttribute(\n                \"style\",\n                \"height:\" + tx[i].scrollHeight + \"px;overflow-y:hidden;\"\n            );\n            tx[i].addEventListener(\"input\", OnInput, false);\n        }\n\n        function OnInput() {\n            this.style.height = \"auto\";\n            this.style.height = this.scrollHeight + \"px\";\n        }\n    }\n\n    /**\n     * Load classes based on view\n     */\n    private loadClasses() {\n        if (this.view === 'profile') {\n            Profile.run();\n            EditProfileModal.run();\n        }\n    }\n}\n\nconst csrfmiddlewaretokenInputs = document.getElementsByName('csrfmiddlewaretoken') as NodeListOf<HTMLInputElement>;\nconst xcsrfToken: string = csrfmiddlewaretokenInputs[0].value\nnew App(xcsrfToken).run();","class EditProfileModal {\n    static run() {\n        const close = document.getElementById('close')\n        const modalContent = document.getElementById('modal-content')\n        const editProfileModal = document.getElementById('edit-profile-modal')\n\n        close.onclick = () => {\n            editProfileModal.classList.remove('flex')\n            editProfileModal.classList.add('hidden')\n        }\n\n        const modalContentChildren = modalContent.querySelectorAll('*')\n        const modalContentChildrenArray = Array.from(modalContentChildren)\n\n        // Close modal if anywhere is clicked outside the modal content\n        editProfileModal.onclick = e => {\n            if (e.target != modalContent && !modalContentChildrenArray.includes(e.target as HTMLElement)) {\n                editProfileModal.classList.remove('flex')\n                editProfileModal.classList.add('hidden')\n            }\n        }\n\n        const saveButton = document.getElementById('save')\n        const profileForm = <HTMLFormElement>document.getElementById('profile-form')\n       \n        saveButton.onclick = () => {\n            profileForm.submit()\n        }\n\n        // Count input value length and update counter\n        function inputCounter(input, inputCount) {\n            input.oninput = function () {\n                inputCount.innerText = this.value.length\n            }\n        }\n\n        // Get all input fields\n        const inputElements = document.querySelectorAll('[id$=\"input\"]')\n        const inputElementsArray = <HTMLInputElement[]>Array.from(inputElements)\n\n        inputElementsArray.forEach(element => {\n            let id = element.id\n            let inputCount = document.getElementById(id + '-count')\n            inputCount.innerText = `${element.value.length}`\n\n            inputCounter(element, inputCount)\n        });\n    }\n}\n\nexport default EditProfileModal","class Like {\n    likeButtons: HTMLElement[]\n    xcsrfToken: string\n\n    constructor(likeButtons: HTMLElement[], xcsrfToken: string) {\n        this.likeButtons = likeButtons;\n\n        this.likeButtons.forEach(element => {\n            element.onclick = () => {\n                if (element.dataset.action == 'unlike') {\n                    let tweetId = element.dataset.id\n                    this.changeLikeButtonAction(tweetId)\n                    this.unlikeTweet(tweetId)\n                } else {\n                    let tweetId = element.dataset.id\n                    this.changeUnlikeButtonAction(tweetId)\n                    this.likeTweet(tweetId)\n                }\n            }\n        })\n\n        this.xcsrfToken = xcsrfToken\n    }\n\n    /**\n     * fetch API initialization\n     * @returns {Object}\n     */\n    private fetchInit(): object {\n        return {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-CSRFToken': this.xcsrfToken\n            },\n        }\n    }\n\n    /**\n     * @param  {string} id\n     * Send like tweet request to server\n     */\n    private likeTweet(id: string) {\n        fetch(`http://127.0.0.1:8000/tweet/like_tweet/${id}/`, this.fetchInit()).then(response => {\n            if (response.status != 200) {\n                // Reset like button and count when the request fails\n                this.changeLikeButtonAction(id)\n            }\n        })\n    }\n\n    /**\n     * @param  {string} id\n     * Send unlike tweet request to server\n     */\n    private unlikeTweet(id: string) {\n        fetch(`http://127.0.0.1:8000/tweet/unlike_tweet/${id}/`, this.fetchInit()).then(response => {\n            if (response.status != 200) {\n                // Reset unlike button and count when the request fails\n                this.changeUnlikeButtonAction(id)\n            }\n        })\n    }\n\n    /**\n     *  Change unlike button action\n     */\n    private changeUnlikeButtonAction(dataId: string): void {\n        const unlikeButtons: NodeListOf<HTMLElement> = document.querySelectorAll(`[data-id=\"${dataId}\"]`)\n\n        unlikeButtons.forEach(element => {\n            const likeIcon = element.querySelector('i')\n            likeIcon.classList.replace('fa-regular', 'fa-solid')\n            likeIcon.classList.add('text-red-500')\n\n            const likesCount = element.querySelectorAll('span')[0]\n            const likesCountNumber = parseInt(likesCount.innerText)\n            likesCount.innerText = `${likesCountNumber + 1}`\n\n            element.dataset.action = 'unlike'\n        })\n    }\n\n\n    /**\n     * @param  {string} dataId\n     *  Change like button action\n     */\n    private changeLikeButtonAction(dataId: string) {\n        const likeButtons: NodeListOf<HTMLElement> = document.querySelectorAll(`[data-id=\"${dataId}\"]`)\n\n        likeButtons.forEach(element => {\n            const likeIcon = element.querySelector('i')\n            likeIcon.classList.replace('fa-solid', 'fa-regular')\n            likeIcon.classList.remove('text-red-500')\n\n            const likesCount = element.querySelectorAll('span')[0]\n            const likesCountNumber = parseInt(likesCount.innerText)\n            likesCount.innerText = `${likesCountNumber - 1}`\n\n            element.dataset.action = 'like'\n        })\n    }\n}\n\nexport default Like","class Profile {\n    static run() {\n        const tweetsTab = document.getElementById('tweets-tab')\n        const tweetsAndRepliesTab = document.getElementById('tweets-and-replies-tab');\n        const likesTab = document.getElementById('likes-tab');\n        const mediaTab = document.getElementById('media-tab');\n        const editProfile = document.getElementById('edit-profile')\n        const editProfileModal = document.getElementById('edit-profile-modal')\n\n        const tweetsTabView = document.getElementById('tweets-tab-view');\n        const tweetsAndRepliesTabView = document.getElementById('tweets-and-replies-tab-view')\n        const likesTabView = document.getElementById('likes-tab-view')\n        const mediaTabView = document.getElementById('media-tab-view')\n\n        const relations = {\n            'tweets-tab': [tweetsTab, tweetsTabView],\n            'tweets-and-replies-tab': [tweetsAndRepliesTab, tweetsAndRepliesTabView],\n            'likes-tab': [likesTab, likesTabView],\n            'media-tab': [mediaTab, mediaTabView]\n        }\n\n        const tabs = [tweetsTab, likesTab, mediaTab, tweetsAndRepliesTab];\n\n        const parser = new DOMParser();\n        const activeTabIndicatorString = \"<div class='w-16 h-1 bg-yellow-400 rounded-full'></div>\"\n\n        // Parse the active tab indicator string and extract the firstChild\n        // which his the node we need to append to the parent div\n        const activeTabIndicator = parser.parseFromString(activeTabIndicatorString, 'text/html').body.firstChild\n\n        // On page load set tweetsTab as active\n        tweetsTab.appendChild(activeTabIndicator)\n        tweetsTabView.classList.remove('hidden')\n\n        tabs.forEach(element => {\n            element.onclick = () => {\n                element.appendChild(activeTabIndicator)\n\n                // Iterate through relation keys and find one that matches\n                // the element clicked on's id\n                Object.keys(relations).forEach((i) => {\n                    if (i == element.id) {\n                        const tabView = relations[i][1]\n                        tabView.classList.remove('hidden')\n                    } else {\n                        const tabView = relations[i][1]\n                        tabView.classList.add('hidden')\n                    }\n                })\n            }\n        });\n\n        // Display edit modal\n        editProfile.onclick = () => {\n            editProfileModal.classList.remove('hidden')\n            editProfileModal.classList.add('flex')\n        }\n    }\n}\n\nexport default Profile"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../../jstoolchain/"}